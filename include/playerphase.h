#ifndef GUARD_PLAYERPHASE_H
#define GUARD_PLAYERPHASE_H

// ??? PlayerPhase_Suspend(???);
void HandlePlayerCursorMovement(void);
int CanShowUnitStatScreen(struct Unit* unit);
// ??? PlayerPhase_MainIdle(???);
void DisplayUnitEffectRange(struct Unit* unit);
// ??? PlayerPhase_InitUnitMovementSelect(???);
void DisplayActiveUnitEffectRange(ProcPtr proc);
// ??? PlayerPhase_DisplayDangerZone(???);
// ??? PlayerPhase_RangeDisplayIdle(???);
// ??? PlayerPhase_CancelAction(???);
// ??? PlayerPhase_BackToMove(???);
// ??? PlayerPhase_PrepareAction(???);
// ??? TryMakeCantoUnit(???);
// ??? RunPotentialWaitEvents(???);
// ??? EnsureCameraOntoActiveUnitPosition(???);
// ??? PlayerPhase_FinishAction(???);
// ??? sub_801D404(???);
// ??? sub_801D434(???);
// ??? PlayerPhase_ApplyUnitMovement(???);
int GetUnitSelectionValueThing(struct Unit* unit);
s8 CanMoveActiveUnitTo(int, int);
// ??? PlayerPhase_DisplayUnitMovement(???);
// ??? PlayerPhase_WaitForUnitMovement(???);
// ??? PlayerPhase_ResumeRangeDisplay(???);
// ??? PlayerPhase_ReloadGameGfx(???);
// ??? MakeMoveunitForActiveUnit(???);
void ClearActiveUnit(ProcPtr proc);
// ??? sub_801D7E8(???);
// ??? PlayerPhase_RangeDisplayIdle_ForceAPress(???);
// ??? sub_801D834(???);
// ??? MoveLimitViewChange_OnInit(???);
// ??? MoveLimitViewChange_OnLoop(???);
// ??? MoveLimitView_OnInit(???);
// ??? MoveLimitView_OnLoop(???);
// ??? MoveLimitView_OnEnd(???);
void DisplayMoveRangeGraphics(int flags);
void HideMoveRangeGraphics(void);
// ??? TrySetCursorOn(???);
void TrySwitchViewedUnit(int x, int y);
// ??? PlayerPhase_HandleAutoEnd(???);

extern struct ProcCmd gProcScr_PlayerPhase[];

#endif  // GUARD_PLAYERPHASE_H